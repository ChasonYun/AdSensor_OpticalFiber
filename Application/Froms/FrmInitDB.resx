<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        K767AAAAAElFTkSuQmCC
</value>
  </data>
</root>